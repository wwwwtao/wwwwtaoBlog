{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "versionLabel": "Next",
          "versionPath": "/docs",
          "versionEditUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs",
          "versionEditUrlLocalized": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/i18n/zh-CN/docusaurus-plugin-content-docs/current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/Users/wwwwtao/Desktop/学习/wwwwtaoBlog/sidebars.js",
          "contentPath": "/Users/wwwwtao/Desktop/学习/wwwwtaoBlog/docs",
          "contentPathLocalized": "/Users/wwwwtao/Desktop/学习/wwwwtaoBlog/i18n/zh-CN/docusaurus-plugin-content-docs/current",
          "mainDocId": "all-intro",
          "sidebars": {
            "mySidebar": [
              {
                "type": "doc",
                "id": "all-intro",
                "label": "开始"
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "html(0)",
                "items": []
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "css(0)",
                "items": []
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "javascript(0)",
                "items": []
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "vue(9)",
                "items": [
                  {
                    "type": "doc",
                    "id": "vue/Vue使用-原理/Vue使用/vue高级特性"
                  },
                  {
                    "type": "doc",
                    "id": "vue/Vue使用-原理/Vue使用/vuex知识点串讲"
                  },
                  {
                    "type": "doc",
                    "id": "vue/Vue使用-原理/Vue原理/如何理解MVVM"
                  },
                  {
                    "type": "doc",
                    "id": "vue/Vue使用-原理/Vue原理/监听data变化的核心API是什么"
                  },
                  {
                    "type": "doc",
                    "id": "vue/Vue使用-原理/Vue原理/vue模板被编译成什么"
                  },
                  {
                    "type": "doc",
                    "id": "vue/Vue使用-原理/Vue原理/vue组件是如何渲染和更新的"
                  },
                  {
                    "type": "doc",
                    "id": "vue/Vue使用-原理/Vue原理/如何用JS实现hash和history路由"
                  },
                  {
                    "type": "doc",
                    "id": "vue/Vue使用-原理/Vue原理/虚拟DOM-diff算法"
                  },
                  {
                    "type": "doc",
                    "id": "vue/Vue使用方法与小技巧/渲染函数"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Webpack4.0(1)",
                "items": [
                  {
                    "type": "doc",
                    "id": "Webpack4.0/Webpack4.0笔记"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Axios(1)",
                "items": [
                  {
                    "type": "doc",
                    "id": "Axios/Axios笔记"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "NodeJS(1)",
                "items": [
                  {
                    "type": "doc",
                    "id": "NodeJS/NodeJS笔记"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "设计模式(1)",
                "items": [
                  {
                    "type": "doc",
                    "id": "Javascript 设计模式系统讲解与应用/设计模式笔记"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "HTTP协议(1)",
                "items": [
                  {
                    "type": "doc",
                    "id": "HTTP协议原理/HTTP协议笔记"
                  }
                ]
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "react(0)",
                "items": []
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "微信小程序(0)",
                "items": []
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "HTTP(0)",
                "items": []
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Browser(0)",
                "items": []
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "Webpack(0)",
                "items": []
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "git代码托管(0)",
                "items": []
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "数据结构与算法(0)",
                "items": []
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "设计模式(0)",
                "items": []
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "编码规范(0)",
                "items": []
              },
              {
                "collapsed": true,
                "type": "category",
                "label": "杂谈(0)",
                "items": []
              }
            ]
          },
          "permalinkToSidebar": {
            "/docs/all-intro": "mySidebar",
            "/docs/Axios/Axios笔记": "mySidebar",
            "/docs/HTTP协议原理/HTTP协议笔记": "mySidebar",
            "/docs/Javascript 设计模式系统讲解与应用/设计模式笔记": "mySidebar",
            "/docs/NodeJS/NodeJS笔记": "mySidebar",
            "/docs/vue/Vue使用-原理/Vue使用/vue高级特性": "mySidebar",
            "/docs/vue/Vue使用-原理/Vue使用/vuex知识点串讲": "mySidebar",
            "/docs/vue/Vue使用-原理/Vue原理/监听data变化的核心API是什么": "mySidebar",
            "/docs/vue/Vue使用-原理/Vue原理/如何理解MVVM": "mySidebar",
            "/docs/vue/Vue使用-原理/Vue原理/如何用JS实现hash和history路由": "mySidebar",
            "/docs/vue/Vue使用-原理/Vue原理/虚拟DOM-diff算法": "mySidebar",
            "/docs/vue/Vue使用-原理/Vue原理/vue模板被编译成什么": "mySidebar",
            "/docs/vue/Vue使用-原理/Vue原理/vue组件是如何渲染和更新的": "mySidebar",
            "/docs/vue/Vue使用方法与小技巧/渲染函数": "mySidebar",
            "/docs/Webpack4.0/Webpack4.0笔记": "mySidebar"
          },
          "docs": [
            {
              "unversionedId": "all-intro",
              "id": "all-intro",
              "isDocsHomePage": false,
              "title": "我的学习笔记",
              "description": "个人在工作中每天都会使用到的笔记，记录了常用的配置（比如 Axios 的配置 Axios笔记，Webpack 配置 等等） 常用 API 的功能和使用方法 (JS 深入浅出>>>JS 对象类型），欢迎克隆一部分进行参考；",
              "source": "@site/docs/intro.md",
              "sourceDirName": ".",
              "slug": "/all-intro",
              "permalink": "/docs/all-intro",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/intro.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "开始",
              "frontMatter": {
                "id": "all-intro",
                "title": "序言",
                "sidebar_label": "开始"
              },
              "sidebar": "mySidebar",
              "next": {
                "title": "vue高级特性",
                "permalink": "/docs/vue/Vue使用-原理/Vue使用/vue高级特性"
              }
            },
            {
              "unversionedId": "Axios/Axios笔记",
              "id": "Axios/Axios笔记",
              "isDocsHomePage": false,
              "title": "Axios笔记",
              "description": "Axios 能够接受的参数",
              "source": "@site/docs/Axios/Axios笔记.md",
              "sourceDirName": "Axios",
              "slug": "/Axios/Axios笔记",
              "permalink": "/docs/Axios/Axios笔记",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/Axios/Axios笔记.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "Webpack4.0笔记",
                "permalink": "/docs/Webpack4.0/Webpack4.0笔记"
              },
              "next": {
                "title": "NodeJS笔记",
                "permalink": "/docs/NodeJS/NodeJS笔记"
              }
            },
            {
              "unversionedId": "css/css-intro",
              "id": "css/css-intro",
              "isDocsHomePage": false,
              "title": "css前言",
              "description": "本页为css教程前言页",
              "source": "@site/docs/css/intro.md",
              "sourceDirName": "css",
              "slug": "/css/css-intro",
              "permalink": "/docs/css/css-intro",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/css/intro.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "写在前面",
              "frontMatter": {
                "id": "css-intro",
                "title": "css前言",
                "sidebar_label": "写在前面"
              }
            },
            {
              "unversionedId": "html/01第一个html",
              "id": "html/01第一个html",
              "isDocsHomePage": false,
              "title": "第一个html",
              "description": "`html",
              "source": "@site/docs/html/01第一个html.md",
              "sourceDirName": "html",
              "slug": "/html/01第一个html",
              "permalink": "/docs/html/01第一个html",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/01第一个html.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "第一个html",
              "frontMatter": {
                "id": "01第一个html",
                "title": "第一个html",
                "sidebar_label": "第一个html"
              }
            },
            {
              "unversionedId": "html/02LocalStorage与SessionStorage",
              "id": "html/02LocalStorage与SessionStorage",
              "isDocsHomePage": false,
              "title": "localStorage与sessionStorage",
              "description": "localStorage和sessionStorage是HTML5提供的对于Web存储的解决方案。",
              "source": "@site/docs/html/02LocalStorage与SessionStorage.md",
              "sourceDirName": "html",
              "slug": "/html/02LocalStorage与SessionStorage",
              "permalink": "/docs/html/02LocalStorage与SessionStorage",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/02LocalStorage与SessionStorage.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "LocalStorage与SessionStorage",
              "frontMatter": {
                "id": "02LocalStorage与SessionStorage",
                "title": "LocalStorage与SessionStorage",
                "sidebar_label": "LocalStorage与SessionStorage"
              }
            },
            {
              "unversionedId": "html/03HTML DOM节点操作",
              "id": "html/03HTML DOM节点操作",
              "isDocsHomePage": false,
              "title": "HTML DOM节点操作",
              "description": "HTML节点的基本操作，添加节点，替换节点，删除节点，绑定事件，访问子节点，访问父节点，访问兄弟节点。",
              "source": "@site/docs/html/03HTML DOM节点操作.md",
              "sourceDirName": "html",
              "slug": "/html/03HTML DOM节点操作",
              "permalink": "/docs/html/03HTML DOM节点操作",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/03HTML DOM节点操作.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "HTML DOM节点操作",
              "frontMatter": {
                "id": "03HTML DOM节点操作",
                "title": "HTML DOM节点操作",
                "sidebar_label": "HTML DOM节点操作"
              }
            },
            {
              "unversionedId": "html/04iframe框架及优缺点",
              "id": "html/04iframe框架及优缺点",
              "isDocsHomePage": false,
              "title": "iframe框架及优缺点",
              "description": "HTML5不再支持使用frame，关于frame与iframe的区别，可以参阅  iframe与frame的区别。",
              "source": "@site/docs/html/04iframe框架及优缺点.md",
              "sourceDirName": "html",
              "slug": "/html/04iframe框架及优缺点",
              "permalink": "/docs/html/04iframe框架及优缺点",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/04iframe框架及优缺点.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "iframe框架及优缺点",
              "frontMatter": {
                "id": "04iframe框架及优缺点",
                "title": "iframe框架及优缺点",
                "sidebar_label": "iframe框架及优缺点"
              }
            },
            {
              "unversionedId": "html/05Cookie与Session",
              "id": "html/05Cookie与Session",
              "isDocsHomePage": false,
              "title": "Cookie与Session",
              "description": "会话跟踪是Web程序中常用的技术，HTTP协议是无状态的，确定用户身份就需要跟踪用户的整个会话。最常用的会话跟踪是使用Cookie与Session，简单来说Cookie通过在客户端记录信息确定用户身份，Session通过在服务器端记录信息确定用户身份。",
              "source": "@site/docs/html/05Cookie与Session.md",
              "sourceDirName": "html",
              "slug": "/html/05Cookie与Session",
              "permalink": "/docs/html/05Cookie与Session",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/05Cookie与Session.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "Cookie与Session",
              "frontMatter": {
                "id": "05Cookie与Session",
                "title": "Cookie与Session",
                "sidebar_label": "Cookie与Session"
              }
            },
            {
              "unversionedId": "html/06HTML5新特性",
              "id": "html/06HTML5新特性",
              "isDocsHomePage": false,
              "title": "HTML5新特性",
              "description": "HTML5是下一代HTML标准，是HTML最新的修订版本，2014年10月由万维网联盟W3C完成标准制定，HTML5将HTML从用于构造一个文档的一个简单标记，到一个完整的应用程序开发平台，HTML5还包括新元素和用于增强存储、多媒体和硬件访问的JavaScript APIs。",
              "source": "@site/docs/html/06HTML5新特性.md",
              "sourceDirName": "html",
              "slug": "/html/06HTML5新特性",
              "permalink": "/docs/html/06HTML5新特性",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/06HTML5新特性.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "HTML5新特性",
              "frontMatter": {
                "id": "06HTML5新特性",
                "title": "HTML5新特性",
                "sidebar_label": "HTML5新特性"
              }
            },
            {
              "unversionedId": "html/07Canvas基础",
              "id": "html/07Canvas基础",
              "isDocsHomePage": false,
              "title": "Canvas基础",
              "description": "HTML5中引入`标签，用于图形的绘制，为图形的绘制提供了画布，是图形容器，具体的图形绘制由JavaScript`来完成。",
              "source": "@site/docs/html/07Canvas基础.md",
              "sourceDirName": "html",
              "slug": "/html/07Canvas基础",
              "permalink": "/docs/html/07Canvas基础",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/07Canvas基础.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "Canvas基础",
              "frontMatter": {
                "id": "07Canvas基础",
                "title": "Canvas基础",
                "sidebar_label": "Canvas基础"
              }
            },
            {
              "unversionedId": "html/08前端性能优化方案",
              "id": "html/08前端性能优化方案",
              "isDocsHomePage": false,
              "title": "前端性能优化方案",
              "description": "前端资源比较庞大，包括HTML、CSS、JavaScript、Image、Flash、Media、Font、Doc等等，前端优化相对比较复杂，对于各种资源的优化都有不同的方式，按粒度大致可以分为两类，第一类是页面级别的优化，例如减小HTTP请求数、脚本的无阻塞加载、内联脚本的位置优化等，第二类则是代码级别的优化，例如JavaScript中的DOM操作优化、图片优化以及HTML结构优化等等。在用户角度前端优化可以让页面加载得更快，对用户的操作响应得更及时，能够给用户提供更为友好的体验，在服务商角度前端优化能够减少页面请求数，减小请求所占带宽，能够节省服务器资源。",
              "source": "@site/docs/html/08前端性能优化方案.md",
              "sourceDirName": "html",
              "slug": "/html/08前端性能优化方案",
              "permalink": "/docs/html/08前端性能优化方案",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/08前端性能优化方案.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "前端性能优化方案",
              "frontMatter": {
                "id": "08前端性能优化方案",
                "title": "前端性能优化方案",
                "sidebar_label": "前端性能优化方案"
              }
            },
            {
              "unversionedId": "html/09行内元素和块级元素",
              "id": "html/09行内元素和块级元素",
              "isDocsHomePage": false,
              "title": "行内元素和块级元素",
              "description": "HTML可以将元素种类分为行内元素、块级元素和行内块级元素三种，在使用过程中可以通过CSS的display属性相互转换。",
              "source": "@site/docs/html/09行内元素和块级元素.md",
              "sourceDirName": "html",
              "slug": "/html/09行内元素和块级元素",
              "permalink": "/docs/html/09行内元素和块级元素",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/09行内元素和块级元素.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "行内元素和块级元素",
              "frontMatter": {
                "id": "09行内元素和块级元素",
                "title": "行内元素和块级元素",
                "sidebar_label": "行内元素和块级元素"
              }
            },
            {
              "unversionedId": "html/10Web Worker",
              "id": "html/10Web Worker",
              "isDocsHomePage": false,
              "title": "Web Worker",
              "description": "JavaScript是单线程语言，如果在Js主线程上进行比较耗时的操作，那么不仅异步的事件回调无法正常完成，浏览器的渲染线程也将被阻塞，无法正常渲染页面。Web Worker能够把JavaScript计算委托给后台线程，线程可以执行任务而不干扰用户界面。",
              "source": "@site/docs/html/10Web Worker.md",
              "sourceDirName": "html",
              "slug": "/html/10Web Worker",
              "permalink": "/docs/html/10Web Worker",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/10Web Worker.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "Web Worker",
              "frontMatter": {
                "id": "10Web Worker",
                "title": "Web Worker",
                "sidebar_label": "Web Worker"
              }
            },
            {
              "unversionedId": "html/11300ms点击延迟",
              "id": "html/11300ms点击延迟",
              "isDocsHomePage": false,
              "title": "300ms点击延迟",
              "description": "移动端的300ms点击延迟是因为移动端可以进行双击缩放的操作，因此浏览器在click之后要等待300ms，看用户有没有下一次点击，也就是判断这次操作是单击还是双击。如果通过监听touchstart事件来替代click事件的话，会导致一些问题：touchstart是手指触摸屏幕就触发，有时候用户只是想滑动屏幕，却触发了touchstart事件；当页面上有两个元素A和B，A元素在B元素上重叠放置，如果A元素的touchstart事件绑定的回调函数是隐藏A元素自身，那么当点击A元素后A元素会消失，事件的触发顺序是touchstart -> touchend -> click，如果在300ms内没有第二次点击便会触发click事件，此时由于A元素消失，那么click事件便落到了B元素上，如果B元素是个链接或者绑定了click事件，那么B元素的默认行为或者是绑定的事件回调便会意外地触发，这就是点击穿透问题，解决这个问题还是需要解决click事件的300ms延迟问题。",
              "source": "@site/docs/html/11_300ms点击延迟.md",
              "sourceDirName": "html",
              "slug": "/html/11300ms点击延迟",
              "permalink": "/docs/html/11300ms点击延迟",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/11_300ms点击延迟.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "300ms点击延迟",
              "frontMatter": {
                "id": "11300ms点击延迟",
                "title": "300ms点击延迟",
                "sidebar_label": "300ms点击延迟"
              }
            },
            {
              "unversionedId": "html/12事件冒泡与阻止冒泡机制",
              "id": "html/12事件冒泡与阻止冒泡机制",
              "isDocsHomePage": false,
              "title": "默认行为及阻止",
              "description": "浏览器以及HTML元素提供了一些默认行为，也可以称作默认事件。",
              "source": "@site/docs/html/12事件冒泡与阻止冒泡机制.md",
              "sourceDirName": "html",
              "slug": "/html/12事件冒泡与阻止冒泡机制",
              "permalink": "/docs/html/12事件冒泡与阻止冒泡机制",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/12事件冒泡与阻止冒泡机制.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "事件冒泡与阻止冒泡机制",
              "frontMatter": {
                "id": "12事件冒泡与阻止冒泡机制",
                "title": "事件冒泡与阻止冒泡机制",
                "sidebar_label": "事件冒泡与阻止冒泡机制"
              }
            },
            {
              "unversionedId": "html/13可替换元素和非替换元素",
              "id": "html/13可替换元素和非替换元素",
              "isDocsHomePage": false,
              "title": "可替换元素和非替换元素",
              "description": "可替换元素replaced element也称作可置换元素，其展现效果不是由CSS来控制的，这些元素是一种外部对象，它们外观的渲染，是独立于CSS的。非置换元素non-replaced element也称作非替换元素，其内容由CSS渲染直接表现给客户端。",
              "source": "@site/docs/html/13可替换元素和非替换元素.md",
              "sourceDirName": "html",
              "slug": "/html/13可替换元素和非替换元素",
              "permalink": "/docs/html/13可替换元素和非替换元素",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/13可替换元素和非替换元素.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "可替换元素和非替换元素",
              "frontMatter": {
                "id": "13可替换元素和非替换元素",
                "title": "可替换元素和非替换元素",
                "sidebar_label": "可替换元素和非替换元素"
              }
            },
            {
              "unversionedId": "html/14HTML与XHTML区别",
              "id": "html/14HTML与XHTML区别",
              "isDocsHomePage": false,
              "title": "HTML与XHTML区别",
              "description": "HTML称为超文本标记语言Hyper Text Markup Language，是一种标识性的语言。XHTML称为扩展超文本标记语言Extensible HyperText Markup Language，同样是一种标识性的语言，表现方式与HTML类似，不过语法上更加严格。从关系上讲，HTML是基于标准通用标记语言SGML的应用，XML是SGML的一个子集，而XHTML则基于XML。",
              "source": "@site/docs/html/14HTML与XHTML区别.md",
              "sourceDirName": "html",
              "slug": "/html/14HTML与XHTML区别",
              "permalink": "/docs/html/14HTML与XHTML区别",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/14HTML与XHTML区别.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "HTML与XHTML区别",
              "frontMatter": {
                "id": "14HTML与XHTML区别",
                "title": "HTML与XHTML区别",
                "sidebar_label": "HTML与XHTML区别"
              }
            },
            {
              "unversionedId": "html/15常见的兼容性问题",
              "id": "html/15常见的兼容性问题",
              "isDocsHomePage": false,
              "title": "常见的兼容性问题",
              "description": "浏览器有着大量不同的版本，不同种类的浏览器的内核也不尽相同，所以不同浏览器对代码的解析会存在差异，这就导致对页面渲染效果不统一的问题。",
              "source": "@site/docs/html/15常见的兼容性问题.md",
              "sourceDirName": "html",
              "slug": "/html/15常见的兼容性问题",
              "permalink": "/docs/html/15常见的兼容性问题",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/15常见的兼容性问题.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "常见的兼容性问题",
              "frontMatter": {
                "id": "15常见的兼容性问题",
                "title": "常见的兼容性问题",
                "sidebar_label": "常见的兼容性问题"
              }
            },
            {
              "unversionedId": "html/16DOM和BOM的区别",
              "id": "html/16DOM和BOM的区别",
              "isDocsHomePage": false,
              "title": "DOM和BOM的区别",
              "description": "在浏览器中运行的JavaScript可以认为由三部分组成：ECMAScript描述了该语言的语法和基本对象，DOM文档对象模型描述了处理网页内容的方法和接口，BOM浏览器对象模型描述了与浏览器进行交互的方法和接口。",
              "source": "@site/docs/html/16DOM和BOM的区别.md",
              "sourceDirName": "html",
              "slug": "/html/16DOM和BOM的区别",
              "permalink": "/docs/html/16DOM和BOM的区别",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/16DOM和BOM的区别.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "DOM和BOM的区别",
              "frontMatter": {
                "id": "16DOM和BOM的区别",
                "title": "DOM和BOM的区别",
                "sidebar_label": "DOM和BOM的区别"
              }
            },
            {
              "unversionedId": "html/17实现图片懒加载",
              "id": "html/17实现图片懒加载",
              "isDocsHomePage": false,
              "title": "实现图片懒加载",
              "description": "图片懒加载就是当页面需要展示较多图片时，首先只加载显示在当前屏幕位置的图片，在页面向下滚动时，再加载其他需要显示在当前屏幕位置的图片，这样可以防止一次性对服务器发送大量请求，并可以在用户不需要完整浏览页面的情况下减少服务器资源消耗。",
              "source": "@site/docs/html/17实现图片懒加载.md",
              "sourceDirName": "html",
              "slug": "/html/17实现图片懒加载",
              "permalink": "/docs/html/17实现图片懒加载",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/17实现图片懒加载.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "实现图片懒加载",
              "frontMatter": {
                "id": "17实现图片懒加载",
                "title": "实现图片懒加载",
                "sidebar_label": "实现图片懒加载"
              }
            },
            {
              "unversionedId": "html/18Shadow DOM的理解",
              "id": "html/18Shadow DOM的理解",
              "isDocsHomePage": false,
              "title": "Shadow DOM的理解",
              "description": "Shadow DOM是HTML的一个规范，其允许在文档document渲染时插入一颗DOM元素子树，但是这棵子树不在主DOM树中，Shadow DOM如果按照英文翻译的话可以翻译为影子DOM，是一种不属于主DOM树的独立的结构。",
              "source": "@site/docs/html/18Shadow DOM的理解.md",
              "sourceDirName": "html",
              "slug": "/html/18Shadow DOM的理解",
              "permalink": "/docs/html/18Shadow DOM的理解",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/18Shadow DOM的理解.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "Shadow DOM的理解",
              "frontMatter": {
                "id": "18Shadow DOM的理解",
                "title": "Shadow DOM的理解",
                "sidebar_label": "Shadow DOM的理解"
              }
            },
            {
              "unversionedId": "html/html-intro",
              "id": "html/html-intro",
              "isDocsHomePage": false,
              "title": "html",
              "description": "本页为html学习前言页",
              "source": "@site/docs/html/intro.md",
              "sourceDirName": "html",
              "slug": "/html/html-intro",
              "permalink": "/docs/html/html-intro",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/html/intro.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "写在前面",
              "frontMatter": {
                "id": "html-intro",
                "title": "html",
                "sidebar_label": "写在前面"
              }
            },
            {
              "unversionedId": "HTTP协议原理/HTTP协议笔记",
              "id": "HTTP协议原理/HTTP协议笔记",
              "isDocsHomePage": false,
              "title": "HTTP协议笔记",
              "description": "HTTP 发展历史",
              "source": "@site/docs/HTTP协议原理/HTTP协议笔记.md",
              "sourceDirName": "HTTP协议原理",
              "slug": "/HTTP协议原理/HTTP协议笔记",
              "permalink": "/docs/HTTP协议原理/HTTP协议笔记",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/HTTP协议原理/HTTP协议笔记.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "设计模式笔记",
                "permalink": "/docs/Javascript 设计模式系统讲解与应用/设计模式笔记"
              }
            },
            {
              "unversionedId": "Javascript 设计模式系统讲解与应用/设计模式笔记",
              "id": "Javascript 设计模式系统讲解与应用/设计模式笔记",
              "isDocsHomePage": false,
              "title": "设计模式笔记",
              "description": "设计原则 S O L I D （五大设计原则）",
              "source": "@site/docs/Javascript 设计模式系统讲解与应用/设计模式笔记.md",
              "sourceDirName": "Javascript 设计模式系统讲解与应用",
              "slug": "/Javascript 设计模式系统讲解与应用/设计模式笔记",
              "permalink": "/docs/Javascript 设计模式系统讲解与应用/设计模式笔记",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/Javascript 设计模式系统讲解与应用/设计模式笔记.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "NodeJS笔记",
                "permalink": "/docs/NodeJS/NodeJS笔记"
              },
              "next": {
                "title": "HTTP协议笔记",
                "permalink": "/docs/HTTP协议原理/HTTP协议笔记"
              }
            },
            {
              "unversionedId": "mdx",
              "id": "mdx",
              "isDocsHomePage": false,
              "title": "Powered by MDX",
              "description": "You can write JSX and use React components within your Markdown thanks to MDX.",
              "source": "@site/docs/mdx.md",
              "sourceDirName": ".",
              "slug": "/mdx",
              "permalink": "/docs/mdx",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/mdx.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {
                "id": "mdx",
                "title": "Powered by MDX"
              }
            },
            {
              "unversionedId": "NodeJS/NodeJS笔记",
              "id": "NodeJS/NodeJS笔记",
              "isDocsHomePage": false,
              "title": "NodeJS笔记",
              "description": "nodejs 介绍",
              "source": "@site/docs/NodeJS/NodeJS笔记.md",
              "sourceDirName": "NodeJS",
              "slug": "/NodeJS/NodeJS笔记",
              "permalink": "/docs/NodeJS/NodeJS笔记",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/NodeJS/NodeJS笔记.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "Axios笔记",
                "permalink": "/docs/Axios/Axios笔记"
              },
              "next": {
                "title": "设计模式笔记",
                "permalink": "/docs/Javascript 设计模式系统讲解与应用/设计模式笔记"
              }
            },
            {
              "unversionedId": "react/react-intro",
              "id": "react/react-intro",
              "isDocsHomePage": false,
              "title": "react前言",
              "description": "本页为react教程前言页",
              "source": "@site/docs/react/intro.md",
              "sourceDirName": "react",
              "slug": "/react/react-intro",
              "permalink": "/docs/react/react-intro",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/react/intro.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "sidebar_label": "写在前面",
              "frontMatter": {
                "id": "react-intro",
                "title": "react前言",
                "sidebar_label": "写在前面"
              }
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue使用/3-17 vue-router知识点串讲",
              "id": "vue/Vue使用-原理/Vue使用/3-17 vue-router知识点串讲",
              "isDocsHomePage": false,
              "title": "3-17 vue-router知识点串讲",
              "description": "路由模式",
              "source": "@site/docs/vue/Vue使用-原理/Vue使用/3-17 vue-router知识点串讲.md",
              "sourceDirName": "vue/Vue使用-原理/Vue使用",
              "slug": "/vue/Vue使用-原理/Vue使用/3-17 vue-router知识点串讲",
              "permalink": "/docs/vue/Vue使用-原理/Vue使用/3-17 vue-router知识点串讲",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue使用/3-17 vue-router知识点串讲.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue使用/3-3 vue基本知识点串讲",
              "id": "vue/Vue使用-原理/Vue使用/3-3 vue基本知识点串讲",
              "isDocsHomePage": false,
              "title": "3-3 vue基本知识点串讲",
              "description": "事件",
              "source": "@site/docs/vue/Vue使用-原理/Vue使用/3-3 vue基本知识点串讲.md",
              "sourceDirName": "vue/Vue使用-原理/Vue使用",
              "slug": "/vue/Vue使用-原理/Vue使用/3-3 vue基本知识点串讲",
              "permalink": "/docs/vue/Vue使用-原理/Vue使用/3-3 vue基本知识点串讲",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue使用/3-3 vue基本知识点串讲.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue使用/3-4 vue父子组件如何通讯",
              "id": "vue/Vue使用-原理/Vue使用/3-4 vue父子组件如何通讯",
              "isDocsHomePage": false,
              "title": "3-4 vue父子组件如何通讯",
              "description": "1. props 和 $emit",
              "source": "@site/docs/vue/Vue使用-原理/Vue使用/3-4 vue父子组件如何通讯.md",
              "sourceDirName": "vue/Vue使用-原理/Vue使用",
              "slug": "/vue/Vue使用-原理/Vue使用/3-4 vue父子组件如何通讯",
              "permalink": "/docs/vue/Vue使用-原理/Vue使用/3-4 vue父子组件如何通讯",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue使用/3-4 vue父子组件如何通讯.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue使用/3-5 如何用自定义事件进行vue组件通讯",
              "id": "vue/Vue使用-原理/Vue使用/3-5 如何用自定义事件进行vue组件通讯",
              "isDocsHomePage": false,
              "title": "3-5 如何用自定义事件进行vue组件通讯",
              "description": "通过一个 Vue 实例绑定一个自定义事件",
              "source": "@site/docs/vue/Vue使用-原理/Vue使用/3-5 如何用自定义事件进行vue组件通讯.md",
              "sourceDirName": "vue/Vue使用-原理/Vue使用",
              "slug": "/vue/Vue使用-原理/Vue使用/3-5 如何用自定义事件进行vue组件通讯",
              "permalink": "/docs/vue/Vue使用-原理/Vue使用/3-5 如何用自定义事件进行vue组件通讯",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue使用/3-5 如何用自定义事件进行vue组件通讯.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue使用/vue高级特性",
              "id": "vue/Vue使用-原理/Vue使用/vue高级特性",
              "isDocsHomePage": false,
              "title": "vue高级特性",
              "description": "生命周期（父子组件）",
              "source": "@site/docs/vue/Vue使用-原理/Vue使用/vue高级特性.md",
              "sourceDirName": "vue/Vue使用-原理/Vue使用",
              "slug": "/vue/Vue使用-原理/Vue使用/vue高级特性",
              "permalink": "/docs/vue/Vue使用-原理/Vue使用/vue高级特性",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue使用/vue高级特性.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "我的学习笔记",
                "permalink": "/docs/all-intro"
              },
              "next": {
                "title": "vuex知识点串讲",
                "permalink": "/docs/vue/Vue使用-原理/Vue使用/vuex知识点串讲"
              }
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue使用/vuex知识点串讲",
              "id": "vue/Vue使用-原理/Vue使用/vuex知识点串讲",
              "isDocsHomePage": false,
              "title": "vuex知识点串讲",
              "description": "Vuex 官方教程电子书",
              "source": "@site/docs/vue/Vue使用-原理/Vue使用/vuex知识点串讲.md",
              "sourceDirName": "vue/Vue使用-原理/Vue使用",
              "slug": "/vue/Vue使用-原理/Vue使用/vuex知识点串讲",
              "permalink": "/docs/vue/Vue使用-原理/Vue使用/vuex知识点串讲",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue使用/vuex知识点串讲.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "vue高级特性",
                "permalink": "/docs/vue/Vue使用-原理/Vue使用/vue高级特性"
              },
              "next": {
                "title": "如何理解MVVM",
                "permalink": "/docs/vue/Vue使用-原理/Vue原理/如何理解MVVM"
              }
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue原理/监听data变化的核心API是什么",
              "id": "vue/Vue使用-原理/Vue原理/监听data变化的核心API是什么",
              "isDocsHomePage": false,
              "title": "监听data变化的核心API是什么",
              "description": "核心 API - Object.defineProperty (Vue3.0 用 Proxy-- 有兼容性问题且无法用 polyfill)",
              "source": "@site/docs/vue/Vue使用-原理/Vue原理/监听data变化的核心API是什么.md",
              "sourceDirName": "vue/Vue使用-原理/Vue原理",
              "slug": "/vue/Vue使用-原理/Vue原理/监听data变化的核心API是什么",
              "permalink": "/docs/vue/Vue使用-原理/Vue原理/监听data变化的核心API是什么",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue原理/监听data变化的核心API是什么.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "如何理解MVVM",
                "permalink": "/docs/vue/Vue使用-原理/Vue原理/如何理解MVVM"
              },
              "next": {
                "title": "vue模板被编译成什么",
                "permalink": "/docs/vue/Vue使用-原理/Vue原理/vue模板被编译成什么"
              }
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue原理/如何理解MVVM",
              "id": "vue/Vue使用-原理/Vue原理/如何理解MVVM",
              "isDocsHomePage": false,
              "title": "如何理解MVVM",
              "description": "数据驱动视图",
              "source": "@site/docs/vue/Vue使用-原理/Vue原理/如何理解MVVM.md",
              "sourceDirName": "vue/Vue使用-原理/Vue原理",
              "slug": "/vue/Vue使用-原理/Vue原理/如何理解MVVM",
              "permalink": "/docs/vue/Vue使用-原理/Vue原理/如何理解MVVM",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue原理/如何理解MVVM.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "vuex知识点串讲",
                "permalink": "/docs/vue/Vue使用-原理/Vue使用/vuex知识点串讲"
              },
              "next": {
                "title": "监听data变化的核心API是什么",
                "permalink": "/docs/vue/Vue使用-原理/Vue原理/监听data变化的核心API是什么"
              }
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue原理/如何用JS实现hash和history路由",
              "id": "vue/Vue使用-原理/Vue原理/如何用JS实现hash和history路由",
              "isDocsHomePage": false,
              "title": "如何用JS实现hash和history路由",
              "description": "hash",
              "source": "@site/docs/vue/Vue使用-原理/Vue原理/如何用JS实现hash和history路由.md",
              "sourceDirName": "vue/Vue使用-原理/Vue原理",
              "slug": "/vue/Vue使用-原理/Vue原理/如何用JS实现hash和history路由",
              "permalink": "/docs/vue/Vue使用-原理/Vue原理/如何用JS实现hash和history路由",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue原理/如何用JS实现hash和history路由.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "vue组件是如何渲染和更新的",
                "permalink": "/docs/vue/Vue使用-原理/Vue原理/vue组件是如何渲染和更新的"
              },
              "next": {
                "title": "虚拟DOM-diff算法",
                "permalink": "/docs/vue/Vue使用-原理/Vue原理/虚拟DOM-diff算法"
              }
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue原理/虚拟DOM-diff算法",
              "id": "vue/Vue使用-原理/Vue原理/虚拟DOM-diff算法",
              "isDocsHomePage": false,
              "title": "虚拟DOM-diff算法",
              "description": "vdom 结构",
              "source": "@site/docs/vue/Vue使用-原理/Vue原理/虚拟DOM-diff算法.md",
              "sourceDirName": "vue/Vue使用-原理/Vue原理",
              "slug": "/vue/Vue使用-原理/Vue原理/虚拟DOM-diff算法",
              "permalink": "/docs/vue/Vue使用-原理/Vue原理/虚拟DOM-diff算法",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue原理/虚拟DOM-diff算法.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "如何用JS实现hash和history路由",
                "permalink": "/docs/vue/Vue使用-原理/Vue原理/如何用JS实现hash和history路由"
              },
              "next": {
                "title": "渲染函数",
                "permalink": "/docs/vue/Vue使用方法与小技巧/渲染函数"
              }
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue原理/vue模板被编译成什么",
              "id": "vue/Vue使用-原理/Vue原理/vue模板被编译成什么",
              "isDocsHomePage": false,
              "title": "vue模板被编译成什么",
              "description": "v-model 原理 看下面代码",
              "source": "@site/docs/vue/Vue使用-原理/Vue原理/vue模板被编译成什么.md",
              "sourceDirName": "vue/Vue使用-原理/Vue原理",
              "slug": "/vue/Vue使用-原理/Vue原理/vue模板被编译成什么",
              "permalink": "/docs/vue/Vue使用-原理/Vue原理/vue模板被编译成什么",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue原理/vue模板被编译成什么.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "监听data变化的核心API是什么",
                "permalink": "/docs/vue/Vue使用-原理/Vue原理/监听data变化的核心API是什么"
              },
              "next": {
                "title": "vue组件是如何渲染和更新的",
                "permalink": "/docs/vue/Vue使用-原理/Vue原理/vue组件是如何渲染和更新的"
              }
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue原理/vue组件是如何渲染和更新的",
              "id": "vue/Vue使用-原理/Vue原理/vue组件是如何渲染和更新的",
              "isDocsHomePage": false,
              "title": "vue组件是如何渲染和更新的",
              "description": "渲染过程",
              "source": "@site/docs/vue/Vue使用-原理/Vue原理/vue组件是如何渲染和更新的.md",
              "sourceDirName": "vue/Vue使用-原理/Vue原理",
              "slug": "/vue/Vue使用-原理/Vue原理/vue组件是如何渲染和更新的",
              "permalink": "/docs/vue/Vue使用-原理/Vue原理/vue组件是如何渲染和更新的",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue原理/vue组件是如何渲染和更新的.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "vue模板被编译成什么",
                "permalink": "/docs/vue/Vue使用-原理/Vue原理/vue模板被编译成什么"
              },
              "next": {
                "title": "如何用JS实现hash和history路由",
                "permalink": "/docs/vue/Vue使用-原理/Vue原理/如何用JS实现hash和history路由"
              }
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue真题/5-1 v-for为何使用key",
              "id": "vue/Vue使用-原理/Vue真题/5-1 v-for为何使用key",
              "isDocsHomePage": false,
              "title": "5-1 v-for为何使用key",
              "description": "1. 必须要 key，且不能是 index 和 random",
              "source": "@site/docs/vue/Vue使用-原理/Vue真题/5-1 v-for为何使用key.md",
              "sourceDirName": "vue/Vue使用-原理/Vue真题",
              "slug": "/vue/Vue使用-原理/Vue真题/5-1 v-for为何使用key",
              "permalink": "/docs/vue/Vue使用-原理/Vue真题/5-1 v-for为何使用key",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue真题/5-1 v-for为何使用key.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue真题/5-2 组件data为何是函数",
              "id": "vue/Vue使用-原理/Vue真题/5-2 组件data为何是函数",
              "isDocsHomePage": false,
              "title": "5-2 组件data为何是函数",
              "description": "组件 data 为何是函数",
              "source": "@site/docs/vue/Vue使用-原理/Vue真题/5-2 组件data为何是函数.md",
              "sourceDirName": "vue/Vue使用-原理/Vue真题",
              "slug": "/vue/Vue使用-原理/Vue真题/5-2 组件data为何是函数",
              "permalink": "/docs/vue/Vue使用-原理/Vue真题/5-2 组件data为何是函数",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue真题/5-2 组件data为何是函数.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue真题/5-4 何时需要使用beforeDestroy",
              "id": "vue/Vue使用-原理/Vue真题/5-4 何时需要使用beforeDestroy",
              "isDocsHomePage": false,
              "title": "5-4 何时需要使用beforeDestroy",
              "description": "何时需要使用 beforeDestroy",
              "source": "@site/docs/vue/Vue使用-原理/Vue真题/5-4 何时需要使用beforeDestroy.md",
              "sourceDirName": "vue/Vue使用-原理/Vue真题",
              "slug": "/vue/Vue使用-原理/Vue真题/5-4 何时需要使用beforeDestroy",
              "permalink": "/docs/vue/Vue使用-原理/Vue真题/5-4 何时需要使用beforeDestroy",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue真题/5-4 何时需要使用beforeDestroy.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue真题/5-5 diff算法时间复杂度",
              "id": "vue/Vue使用-原理/Vue真题/5-5 diff算法时间复杂度",
              "isDocsHomePage": false,
              "title": "5-5 diff算法时间复杂度",
              "description": "diff 算法 O(n)",
              "source": "@site/docs/vue/Vue使用-原理/Vue真题/5-5 diff算法时间复杂度.md",
              "sourceDirName": "vue/Vue使用-原理/Vue真题",
              "slug": "/vue/Vue使用-原理/Vue真题/5-5 diff算法时间复杂度",
              "permalink": "/docs/vue/Vue使用-原理/Vue真题/5-5 diff算法时间复杂度",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue真题/5-5 diff算法时间复杂度.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue真题/5-6 vue常见性能优化",
              "id": "vue/Vue使用-原理/Vue真题/5-6 vue常见性能优化",
              "isDocsHomePage": false,
              "title": "5-6 vue常见性能优化",
              "description": "1. 合理使用 v-show 和 v-if",
              "source": "@site/docs/vue/Vue使用-原理/Vue真题/5-6 vue常见性能优化.md",
              "sourceDirName": "vue/Vue使用-原理/Vue真题",
              "slug": "/vue/Vue使用-原理/Vue真题/5-6 vue常见性能优化",
              "permalink": "/docs/vue/Vue使用-原理/Vue真题/5-6 vue常见性能优化",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue真题/5-6 vue常见性能优化.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "vue/Vue使用-原理/Vue真题/5-7 为何 Proxy 不能被 polyfill",
              "id": "vue/Vue使用-原理/Vue真题/5-7 为何 Proxy 不能被 polyfill",
              "isDocsHomePage": false,
              "title": "5-7 为何 Proxy 不能被 polyfill",
              "description": "class 可以用 function 模拟",
              "source": "@site/docs/vue/Vue使用-原理/Vue真题/5-7 为何 Proxy 不能被 polyfill.md",
              "sourceDirName": "vue/Vue使用-原理/Vue真题",
              "slug": "/vue/Vue使用-原理/Vue真题/5-7 为何 Proxy 不能被 polyfill",
              "permalink": "/docs/vue/Vue使用-原理/Vue真题/5-7 为何 Proxy 不能被 polyfill",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用-原理/Vue真题/5-7 为何 Proxy 不能被 polyfill.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "vue/Vue使用方法与小技巧/6.12 router路由",
              "id": "vue/Vue使用方法与小技巧/6.12 router路由",
              "isDocsHomePage": false,
              "title": "6.12 router路由",
              "description": "1.$router 为 VueRouter 实例，想要导航到不同 URL，则使用 $router.push 方法",
              "source": "@site/docs/vue/Vue使用方法与小技巧/6.12 router路由.md",
              "sourceDirName": "vue/Vue使用方法与小技巧",
              "slug": "/vue/Vue使用方法与小技巧/6.12 router路由",
              "permalink": "/docs/vue/Vue使用方法与小技巧/6.12 router路由",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用方法与小技巧/6.12 router路由.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "vue/Vue使用方法与小技巧/6.25 Vuex",
              "id": "vue/Vue使用方法与小技巧/6.25 Vuex",
              "isDocsHomePage": false,
              "title": "6.25 Vuex",
              "description": "--------------------------------------VueX------------------------------------------",
              "source": "@site/docs/vue/Vue使用方法与小技巧/6.25 Vuex.md",
              "sourceDirName": "vue/Vue使用方法与小技巧",
              "slug": "/vue/Vue使用方法与小技巧/6.25 Vuex",
              "permalink": "/docs/vue/Vue使用方法与小技巧/6.25 Vuex",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用方法与小技巧/6.25 Vuex.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "vue/Vue使用方法与小技巧/渲染函数",
              "id": "vue/Vue使用方法与小技巧/渲染函数",
              "isDocsHomePage": false,
              "title": "渲染函数",
              "description": "渲染函数",
              "source": "@site/docs/vue/Vue使用方法与小技巧/渲染函数.md",
              "sourceDirName": "vue/Vue使用方法与小技巧",
              "slug": "/vue/Vue使用方法与小技巧/渲染函数",
              "permalink": "/docs/vue/Vue使用方法与小技巧/渲染函数",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/vue/Vue使用方法与小技巧/渲染函数.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "虚拟DOM-diff算法",
                "permalink": "/docs/vue/Vue使用-原理/Vue原理/虚拟DOM-diff算法"
              },
              "next": {
                "title": "Webpack4.0笔记",
                "permalink": "/docs/Webpack4.0/Webpack4.0笔记"
              }
            },
            {
              "unversionedId": "Webpack4.0/babel",
              "id": "Webpack4.0/babel",
              "isDocsHomePage": false,
              "title": "babel",
              "description": "`js",
              "source": "@site/docs/Webpack4.0/babel.md",
              "sourceDirName": "Webpack4.0",
              "slug": "/Webpack4.0/babel",
              "permalink": "/docs/Webpack4.0/babel",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/Webpack4.0/babel.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {}
            },
            {
              "unversionedId": "Webpack4.0/Webpack4.0笔记",
              "id": "Webpack4.0/Webpack4.0笔记",
              "isDocsHomePage": false,
              "title": "Webpack4.0笔记",
              "description": "webpack 究竟是什么？",
              "source": "@site/docs/Webpack4.0/Webpack4.0笔记.md",
              "sourceDirName": "Webpack4.0",
              "slug": "/Webpack4.0/Webpack4.0笔记",
              "permalink": "/docs/Webpack4.0/Webpack4.0笔记",
              "editUrl": "https://github.com/JACK-ZHANG-coming/my-now-blog/blob/main/docs/Webpack4.0/Webpack4.0笔记.md",
              "version": "current",
              "lastUpdatedAt": 1539502055,
              "formattedLastUpdatedAt": "2018/10/14",
              "frontMatter": {},
              "sidebar": "mySidebar",
              "previous": {
                "title": "渲染函数",
                "permalink": "/docs/vue/Vue使用方法与小技巧/渲染函数"
              },
              "next": {
                "title": "Axios笔记",
                "permalink": "/docs/Axios/Axios笔记"
              }
            }
          ]
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogPosts": [
        {
          "id": "一个前端开发对于Flex布局的总结（图解，简单易懂，全）",
          "metadata": {
            "permalink": "/一个前端开发对于Flex布局的总结（图解，简单易懂，全）",
            "source": "@site/blog/2021-11-12-一个前端开发对于Flex布局的总结（图解，简单易懂，全）.md",
            "title": "一个前端开发对于Flex布局的总结（图解，简单易懂，全）",
            "description": "自适应布局的前缀基础。",
            "date": "2021-11-12T00:00:00.000Z",
            "formattedDate": "2021年11月12日",
            "tags": [
              {
                "label": "css",
                "permalink": "/tags/css"
              },
              {
                "label": "FlexBox",
                "permalink": "/tags/flex-box"
              }
            ],
            "readingTime": 2.16,
            "truncated": true,
            "nextItem": {
              "title": "一个初级前端结合css、div谈一谈屏幕尺寸、分辨率、缩放概念",
              "permalink": "/一个初级前端结合css、div谈一谈屏幕尺寸、分辨率、缩放概念"
            }
          }
        },
        {
          "id": "一个初级前端结合css、div谈一谈屏幕尺寸、分辨率、缩放概念",
          "metadata": {
            "permalink": "/一个初级前端结合css、div谈一谈屏幕尺寸、分辨率、缩放概念",
            "source": "@site/blog/2021-08-06-一个初级前端结合css、div谈一谈屏幕尺寸、分辨率、缩放概念 copy.md",
            "title": "一个初级前端结合css、div谈一谈屏幕尺寸、分辨率、缩放概念",
            "description": "自适应布局的前缀基础。",
            "date": "2021-08-06T00:00:00.000Z",
            "formattedDate": "2021年8月6日",
            "tags": [
              {
                "label": "前端",
                "permalink": "/tags/前端"
              },
              {
                "label": "css",
                "permalink": "/tags/css"
              }
            ],
            "readingTime": 0.265,
            "truncated": true,
            "prevItem": {
              "title": "一个前端开发对于Flex布局的总结（图解，简单易懂，全）",
              "permalink": "/一个前端开发对于Flex布局的总结（图解，简单易懂，全）"
            },
            "nextItem": {
              "title": "react子父组件互相通信传值",
              "permalink": "/react子父组件互相通信传值"
            }
          }
        },
        {
          "id": "react子父组件互相通信传值",
          "metadata": {
            "permalink": "/react子父组件互相通信传值",
            "source": "@site/blog/2021-08-02react子父组件互相通信传值.md",
            "title": "react子父组件互相通信传值",
            "description": "react子父组件互相通行，意在融会贯通。",
            "date": "2021-08-02T00:00:00.000Z",
            "formattedDate": "2021年8月2日",
            "tags": [
              {
                "label": "前端",
                "permalink": "/tags/前端"
              },
              {
                "label": "react",
                "permalink": "/tags/react"
              }
            ],
            "readingTime": 0.425,
            "truncated": true,
            "prevItem": {
              "title": "一个初级前端结合css、div谈一谈屏幕尺寸、分辨率、缩放概念",
              "permalink": "/一个初级前端结合css、div谈一谈屏幕尺寸、分辨率、缩放概念"
            },
            "nextItem": {
              "title": "回炉重造，css常规布局系统整理——实战开发后复盘小结",
              "permalink": "/回炉重造，css常规布局系统整理——实战开发后复盘小结"
            }
          }
        },
        {
          "id": "回炉重造，css常规布局系统整理——实战开发后复盘小结",
          "metadata": {
            "permalink": "/回炉重造，css常规布局系统整理——实战开发后复盘小结",
            "source": "@site/blog/2021-07-18-回炉重造，css常规布局系统整理——实战开发后复盘小.md",
            "title": "回炉重造，css常规布局系统整理——实战开发后复盘小结",
            "description": "本文意在系统总结常用的css布局，以达到融会贯通之功效。",
            "date": "2021-07-18T00:00:00.000Z",
            "formattedDate": "2021年7月18日",
            "tags": [
              {
                "label": "前端",
                "permalink": "/tags/前端"
              },
              {
                "label": "css",
                "permalink": "/tags/css"
              }
            ],
            "readingTime": 3.905,
            "truncated": true,
            "prevItem": {
              "title": "react子父组件互相通信传值",
              "permalink": "/react子父组件互相通信传值"
            },
            "nextItem": {
              "title": "一个前端开发从零开始配置前端开发环境纪实",
              "permalink": "/一个前端开发从零开始配置前端开发环境纪实"
            }
          }
        },
        {
          "id": "一个前端开发从零开始配置前端开发环境纪实",
          "metadata": {
            "permalink": "/一个前端开发从零开始配置前端开发环境纪实",
            "source": "@site/blog/2021-06-15-一个前端开发从零开始配置前端开发环境纪实.md",
            "title": "一个前端开发从零开始配置前端开发环境纪实",
            "description": "请输入描述",
            "date": "2021-06-15T00:00:00.000Z",
            "formattedDate": "2021年6月15日",
            "tags": [
              {
                "label": "前端环境配置",
                "permalink": "/tags/前端环境配置"
              },
              {
                "label": "个人记录",
                "permalink": "/tags/个人记录"
              }
            ],
            "readingTime": 0.64,
            "truncated": true,
            "prevItem": {
              "title": "回炉重造，css常规布局系统整理——实战开发后复盘小结",
              "permalink": "/回炉重造，css常规布局系统整理——实战开发后复盘小结"
            },
            "nextItem": {
              "title": "使用react+docusaurus快速搭建一个博客网站",
              "permalink": "/使用react+docusaurus快速搭建一个博客网站"
            }
          }
        },
        {
          "id": "使用react+docusaurus快速搭建一个博客网站",
          "metadata": {
            "permalink": "/使用react+docusaurus快速搭建一个博客网站",
            "source": "@site/blog/2021-05-23-快速搭建一个博客网站.md",
            "title": "使用react+docusaurus快速搭建一个博客网站",
            "description": "请输入描述",
            "date": "2021-05-23T00:00:00.000Z",
            "formattedDate": "2021年5月23日",
            "tags": [
              {
                "label": "前端",
                "permalink": "/tags/前端"
              },
              {
                "label": "React",
                "permalink": "/tags/react"
              },
              {
                "label": "博客网站",
                "permalink": "/tags/博客网站"
              }
            ],
            "readingTime": 0.34,
            "truncated": true,
            "prevItem": {
              "title": "一个前端开发从零开始配置前端开发环境纪实",
              "permalink": "/一个前端开发从零开始配置前端开发环境纪实"
            },
            "nextItem": {
              "title": "js map函数的用法",
              "permalink": "/map-use"
            }
          }
        },
        {
          "id": "map-use",
          "metadata": {
            "permalink": "/map-use",
            "source": "@site/blog/2021-05-18-map-use.md",
            "title": "js map函数的用法",
            "description": "map()方法只能应用于数组遍历。如果想要遍历对象，可将对象转化为数组对象再其进行遍历。下面让我们来了解map的用法吧~",
            "date": "2021-05-18T00:00:00.000Z",
            "formattedDate": "2021年5月18日",
            "tags": [
              {
                "label": "js",
                "permalink": "/tags/js"
              },
              {
                "label": "前端",
                "permalink": "/tags/前端"
              }
            ],
            "readingTime": 0.145,
            "truncated": false,
            "prevItem": {
              "title": "使用react+docusaurus快速搭建一个博客网站",
              "permalink": "/使用react+docusaurus快速搭建一个博客网站"
            },
            "nextItem": {
              "title": "vscode+react环境部署，运行第一个react框架",
              "permalink": "/react-use"
            }
          }
        },
        {
          "id": "react-use",
          "metadata": {
            "permalink": "/react-use",
            "source": "@site/blog/2021-05-18-react-use copy.md",
            "title": "vscode+react环境部署，运行第一个react框架",
            "description": "s",
            "date": "2021-05-18T00:00:00.000Z",
            "formattedDate": "2021年5月18日",
            "tags": [
              {
                "label": "js",
                "permalink": "/tags/js"
              },
              {
                "label": "react",
                "permalink": "/tags/react"
              },
              {
                "label": "前端",
                "permalink": "/tags/前端"
              }
            ],
            "readingTime": 0.27,
            "truncated": false,
            "prevItem": {
              "title": "js map函数的用法",
              "permalink": "/map-use"
            }
          }
        }
      ],
      "blogListPaginated": [
        {
          "metadata": {
            "permalink": "/",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 1,
            "totalCount": 8,
            "previousPage": null,
            "nextPage": null,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          },
          "items": [
            "一个前端开发对于Flex布局的总结（图解，简单易懂，全）",
            "一个初级前端结合css、div谈一谈屏幕尺寸、分辨率、缩放概念",
            "react子父组件互相通信传值",
            "回炉重造，css常规布局系统整理——实战开发后复盘小结",
            "一个前端开发从零开始配置前端开发环境纪实",
            "使用react+docusaurus快速搭建一个博客网站",
            "map-use",
            "react-use"
          ]
        }
      ],
      "blogTags": {
        "css": {
          "name": "css",
          "items": [
            "一个前端开发对于Flex布局的总结（图解，简单易懂，全）",
            "一个初级前端结合css、div谈一谈屏幕尺寸、分辨率、缩放概念",
            "回炉重造，css常规布局系统整理——实战开发后复盘小结"
          ],
          "permalink": "/tags/css"
        },
        "flex-box": {
          "name": "flexbox",
          "items": [
            "一个前端开发对于Flex布局的总结（图解，简单易懂，全）"
          ],
          "permalink": "/tags/flex-box"
        },
        "前端": {
          "name": "前端",
          "items": [
            "一个初级前端结合css、div谈一谈屏幕尺寸、分辨率、缩放概念",
            "react子父组件互相通信传值",
            "回炉重造，css常规布局系统整理——实战开发后复盘小结",
            "使用react+docusaurus快速搭建一个博客网站",
            "map-use",
            "react-use"
          ],
          "permalink": "/tags/前端"
        },
        "react": {
          "name": "react",
          "items": [
            "react子父组件互相通信传值",
            "使用react+docusaurus快速搭建一个博客网站",
            "react-use"
          ],
          "permalink": "/tags/react"
        },
        "前端环境配置": {
          "name": "前端环境配置",
          "items": [
            "一个前端开发从零开始配置前端开发环境纪实"
          ],
          "permalink": "/tags/前端环境配置"
        },
        "个人记录": {
          "name": "个人记录",
          "items": [
            "一个前端开发从零开始配置前端开发环境纪实"
          ],
          "permalink": "/tags/个人记录"
        },
        "博客网站": {
          "name": "博客网站",
          "items": [
            "使用react+docusaurus快速搭建一个博客网站"
          ],
          "permalink": "/tags/博客网站"
        },
        "js": {
          "name": "js",
          "items": [
            "map-use",
            "react-use"
          ],
          "permalink": "/tags/js"
        }
      },
      "blogTagsListPath": "/tags"
    },
    "lifestyle-blog": {
      "blogPosts": [
        {
          "id": "lifestyle-test",
          "metadata": {
            "permalink": "/lifestyle/lifestyle-test",
            "source": "@site/lifestyle/2020-04-03-first-blog.md",
            "title": "测试第二博客",
            "description": "测试第二博客",
            "date": "2020-04-03T00:00:00.000Z",
            "formattedDate": "2020年4月3日",
            "tags": [
              {
                "label": "生活方式",
                "permalink": "/lifestyle/tags/生活方式"
              }
            ],
            "readingTime": 0.005,
            "truncated": false
          }
        }
      ],
      "blogListPaginated": [
        {
          "metadata": {
            "permalink": "/lifestyle",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 1,
            "totalCount": 1,
            "previousPage": null,
            "nextPage": null,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          },
          "items": [
            "lifestyle-test"
          ]
        }
      ],
      "blogTags": {
        "生活方式": {
          "name": "生活方式",
          "items": [
            "lifestyle-test"
          ],
          "permalink": "/lifestyle/tags/生活方式"
        }
      },
      "blogTagsListPath": "/lifestyle/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": []
  },
  "docusaurus-plugin-debug": {
    "default": null
  },
  "docusaurus-theme-classic": {
    "default": null
  },
  "docusaurus-baidu-analytics-plugin": {
    "default": null
  },
  "docusaurus-baidu-push-plugin": {
    "default": null
  },
  "docusaurus-google-adsense-plugin": {
    "default": null
  },
  "plugin-onesignal-push": {
    "default": null
  },
  "docusaurus2-dotenv": {
    "default": null
  }
}